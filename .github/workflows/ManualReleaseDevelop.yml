name: "Manual Release - Develop"

on:
  workflow_dispatch:
    inputs:
      buildConfig:
        description: "Build configuration"
        required: true
        default: "Debug"
        type: choice
        options:
          - "Debug"
          - "Release"
      releaseTypeTag: # Use -alpha, -beta, or -rc for pre-release. An empty string for stable.
        description: "Release type tag"
        required: true
        default: "-beta"
        type: choice
        options:
          - "-alpha"
          - "-beta"
          - "-RC"
          - ""
      unitTests:
        description: "Run Unit Tests"
        required: false
        default: false
        type: boolean

jobs:
  Get-CSProj-Version:
    name: Get C# project version
    uses: Squirrelies/CI-CD-Test/.github/workflows/GetCSProjVersion.yml@main
    with:
      repository: ${{github.repository}}
      ref: ${{github.ref}}
      config-path: src/ProcessMemory/ProcessMemory.csproj

  Get-UTC-DateTime:
    name: Get UTC DateTime
    uses: Squirrelies/CI-CD-Test/.github/workflows/GetUTCDateTime.yml@main

  Build:
    name: "Build .NET Project"
    runs-on: "windows-latest"
    needs: [Get-CSProj-Version, Get-UTC-DateTime]
    strategy:
      matrix:
        BUILD_PLATFORM: [x86, x64]
    env:
      BUILD_PLATFORM: ${{matrix.BUILD_PLATFORM}}
      SOLUTION: "ProcessMemory.sln"
      PROJECT: "src/ProcessMemory/ProcessMemory.csproj"
      VERSION: ${{needs.Get-CSProj-Version.outputs.Version}}${{inputs.releaseTypeTag}}.${{needs.Get-UTC-DateTime.outputs.UTC-DateTime}}

    steps:
      - name: Build Native Library
        uses: Squirrelies/CI-CD-Test/.github/workflows/BuildMSYS2CMakeVCPkgProject.yml@main
        id: build-native-library
        with:
          repository: ${{github.repository}}
          ref: ${{github.ref}}
          msys2-msystem: ${{ matrix.BUILD_PLATFORM == 'x64' && 'clang64' || 'mingw32' }}
          msys2-packages: ${{ matrix.BUILD_PLATFORM == 'x64' && 'base-devel mingw-w64-clang-x86_64-toolchain mingw-w64-clang-x86_64-cmake mingw-w64-x86_64-clang-tools-extra' || 'base-devel mingw-w64-i686-toolchain mingw-w64-i686-cmake mingw-w64-i686-clang mingw-w64-i686-lld mingw-w64-i686-clang-tools-extra mingw-w64-i686-libc++ mingw-w64-i686-headers-git' }}
          root-path: ./src/ProcessMemoryNative
          preset-configuration: ${{inputs.buildConfig}}
          preset-configuration-tidy: ${{inputs.buildConfig}}-Tidy
          run-unit-tests: ${{inputs.unitTests}}
          additional-cmake-args: -DARCH=${{matrix.BUILD_PLATFORM}}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{github.ref}}

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          dotnet-quality: "ga"

      - name: Restore
        run: dotnet restore $env:SOLUTION --verbosity normal

      - name: Build
        run: dotnet build $env:SOLUTION /p:"Configuration=${{inputs.buildConfig}};Platform=$env:BUILD_PLATFORM;VERSION=${{env.VERSION}}" --no-restore --verbosity normal

      - name: Run tests
        run: dotnet test /p:"Configuration=${{inputs.buildConfig}};Platform=$env:BUILD_PLATFORM;VERSION=${{env.VERSION}}" --no-restore --no-build --verbosity normal

      - name: Publish
        run: nuget push **\*.nupkg -Source "https://api.nuget.org/v3/index.json" -ApiKey "${{secrets.NUGET_API_KEY}}" -SkipDuplicate
